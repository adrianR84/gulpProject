{"version":3,"sources":["site.less","include/_dss.less"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA;EACC,6BAAA;EACA,WAAA;EACA,YAAA;EACA,kBAAA;EACA,mCAAA;EACA,kCAAA;;AAGD;EACC,aAAa,2BAAb;EACA,eAAA;EACA,gBAAA;;AAGD;AAAI;AAAI;AAAI;AAAI;EAAI,iBAAA;;AAEpB;EAAS,cAAA;;AACT;EAAS,cAAA;;AACT;EAAS,cAAA;;AACT;EAAU,eAAA;;AACV;EAAU,eAAA;;AACV;EAAU,eAAA;;AACV;EAAU,eAAA;;AACV;EAAU,eAAA;;AACV;EAAU,eAAA;;AACV;EAAU,eAAA;EAAiB,uBAAA;;ACojB1B;EACE,mBAAA;EACA,iBAAA;;AAEF;EACE,mBAAA;EACA,iBAAA;;ADtjBH;EAAI,yBAAA;;AAEJ;EAAS,8BAAA;;AACT;EAAS,6BAAA;;AACT;EAAO,2BAAA;;AACP;EAAQ,4BAAA;;AAER;EAAO,4BAAA;;AACP;EAAS,8BAAA;;;AAaP,IAAI;EACJ,gBAAA;;AAEA,IAAI;EACJ,iBAAA;;AAX8B,IAAI;EADV,mBAAA;;AAexB,IAAI;EACJ,oBAAA;;AARA,IAAI;EACJ,gBAAA;;AAEA,IAAI;EACJ,iBAAA;;AAX8B,IAAI;EADV,mBAAA;;AAexB,IAAI;EACJ,oBAAA;;AARA,IAAI;EACJ,gBAAA;;AAEA,IAAI;EACJ,iBAAA;;AAX8B,IAAI;EADV,mBAAA;;AAexB,IAAI;EACJ,oBAAA;;AARA,IAAI;EACJ,gBAAA;;AAEA,IAAI;EACJ,iBAAA;;AAX8B,IAAI;EADV,mBAAA;;AAexB,IAAI;EACJ,oBAAA;;AARA,IAAI;EACJ,gBAAA;;AAEA,IAAI;EACJ,iBAAA;;AAX8B,IAAI;EADV,mBAAA;;AAexB,IAAI;EACJ,oBAAA;;AARA,IAAI;EACJ,gBAAA;;AAEA,IAAI;EACJ,iBAAA;;AAX8B,IAAI;EADV,mBAAA;;AAexB,IAAI;EACJ,oBAAA;;AARA,IAAI;EACJ,gBAAA;;AAEA,IAAI;EACJ,iBAAA;;AAX8B,IAAI;EADV,mBAAA;;AAexB,IAAI;EACJ,oBAAA;;AARA,IAAI;EACJ,eAAA;;AAEA,IAAI;EACJ,gBAAA;;AAX8B,IAAI;EADV,kBAAA;;AAexB,IAAI;EACJ,mBAAA;;AARA,IAAI;EACJ,eAAA;;AAEA,IAAI;EACJ,gBAAA;;AAX8B,IAAI;EADV,kBAAA;;AAexB,IAAI;EACJ,mBAAA","file":"site.css","sourcesContent":["@import \"include/_dss.less\";\n\n@import url(http://fonts.googleapis.com/css?family=Alegreya+Sans:400,700&subset=latin,latin-ext);\n\n\n@font-size-base-desktop: 15px;\n@font-size-base-mobile: 17px;\n\n@font-size-base: @font-size-base-desktop;\n\n@font-size-headerBig: @font-size-base * 1.25;\n@font-size-headerSmall: @font-size-base * 1.1;\n\n@shadow-color: #ccc;\n@colouredHeader-color: #fff;\n\n\n\nhtml{\n\toverflow-x: hidden !important;\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n\t-webkit-font-smoothing: antialiased;\n\ttext-rendering: optimizeLegibility;\n}\n\nbody{\t\n\tfont-family: 'Alegreya Sans', sans-serif;\n\tfont-size: @font-size-base;\n\tline-height:1.3;\n}\n\nh1, h2, h3, h4, h5 {font-weight: bold;}\n\n.text70{ font-size: 70%; }\n.text80{ font-size: 80%; }\n.text90{ font-size: 90%; }\n.text100{ font-size: 100%; }\n.text110{ font-size: 110%; }\n.text120{ font-size: 120%; }\n.text130{ font-size: 130%; }\n.text140{ font-size: 140%; }\n.text150{ font-size: 150%; }\n.text160{ font-size: 160%; color: green !important;}\n\n.selection-color();\n\nhr {border:1px @shadow-color solid;}\n\n.justify{text-align:justify !important;}\n.center {text-align: center !important;}\n.left {text-align: left !important;}\n.right {text-align: right !important;}\n\n.bold {font-weight: bold !important;}\n.normal {font-weight: normal !important;}\n\n\n/* auto generated classes for margin and padding */\n\n.getMarginBottom(@size) { margin-bottom: @size * 1px !important; }\n.genMarginBottomClass (@size) { .mb-@{size} { .getMarginBottom(@size); } }\n\n\n@iterations: 8;\n.loopingClass (@index) when (@index >= 0) {\n  @number: (@index * 5);\n  \n\t .mt-@{number} {\n\t\tmargin-top:@number * 1px !important;\n\t}\n\t .pt-@{number} {\n\t\tpadding-top:@number * 1px !important;\n\t}\t\n\t .genMarginBottomClass(@number);\n\t .pb-@{number} {\n\t\tpadding-bottom:@number * 1px !important;\n\t}\t\n\t\n\t.loopingClass(@index - 1);\n}\n\n.loopingClass (@iterations);","/*\n LESS DSS (dynamic stylesheet) 1.8.5 (for less.js 1.3+)\n MORE INFO: http://cl.ly/Dqnr\n LESS mixins by Chris Krupski\n*/\n\n\n/* Backgrounds Group\n========================== */\n\n.gradient-h (@startColor: #EEE, @endColor: #FFF) {\n  background-color: @endColor;\n  background-image: -webkit-gradient(linear, left center, right center, from(@startColor),to(@endColor));\n  background-image: -webkit-linear-gradient(left, @startColor, @endColor);\n  background-image:    -moz-linear-gradient(left, @startColor, @endColor);\n  background-image:      -o-linear-gradient(left, @startColor, @endColor);\n  background-image:         linear-gradient(left, @startColor, @endColor);\n  filter: e(%(\"progid:DXImageTransform.Microsoft.gradient(GradientType=1, StartColorStr='%d', EndColorStr='%d')\", @startColor, @endColor));\n}\n\n/* @group gradient-veritical() */\n\n  .gradient-v (@startColor: #EEE, @endColor: #FFF) {\n    background-color: mix(@startColor, @endColor, 60%);\n    background-image: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));\n    background-image: -webkit-linear-gradient(top, @startColor, @endColor);\n    background-image:    -moz-linear-gradient(top, @startColor, @endColor);\n    background-image:      -o-linear-gradient(top, @startColor, @endColor);\n    background-image:         linear-gradient(top, @startColor, @endColor);\n    filter: e(%(\"progid:DXImageTransform.Microsoft.gradient(GradientType=0, StartColorStr='%d', EndColorStr='%d')\", @startColor, @endColor));\n  }\n\n  .gradient-vline (@startColor: #B0BAC5, @middleColor1: #9DA7B2, @middleColor2: #919CA8, @endColor: #7E8A98) {\n    background: mix(@middleColor1, @middleColor2, 50%);\n    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, @startColor), color-stop(50%, @middleColor1), color-stop(51%, @middleColor2), color-stop(100%, @endColor));\n    background-image: -webkit-linear-gradient(top, @startColor 0%, @middleColor1 50%, @middleColor2 51%, @endColor 100%);\n    background-image:    -moz-linear-gradient(top, @startColor 0%, @middleColor1 50%, @middleColor2 51%, @endColor 100%);\n    background-image:      -o-linear-gradient(top, @startColor 0%, @middleColor1 50%, @middleColor2 51%, @endColor 100%);\n    background-image:         linear-gradient(top, @startColor 0%, @middleColor1 50%, @middleColor2 51%, @endColor 100%);\n  }\n\n  .gradient-v3colors (@startColor: #00b3ee, @middleColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {\n    background-color: mix(@middleColor, @endColor, 80%);\n    background-image: -webkit-gradient(linear, left top, left bottom, from(@startColor), color-stop(@colorStop, @middleColor), to(@endColor));\n    background-image: -webkit-linear-gradient(@startColor, @middleColor @colorStop, @endColor);\n    background-image:    -moz-linear-gradient(top, @startColor, @middleColor @colorStop, @endColor);\n    background-image:      -o-linear-gradient(@startColor, @middleColor @colorStop, @endColor);\n    background-image:         linear-gradient(@startColor, @middleColor @colorStop, @endColor);\n    filter: e(%(\"progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='%d', endColorstr='%d')\", @startColor, @endColor));\n  }\n\n/* @end */\n\n.gradient-radial (@innerColor: #EEE, @outerColor: #FFF) {\n  background-color: @outerColor;\n  background-image: -webkit-gradient(radial, 50% 50%, 200, 50% 50%, 20, from(@outerColor), to(@innerColor));\n  background-image: -webkit-radial-gradient(50% 50%, @innerColor, @outerColor);\n  background-image:    -moz-radial-gradient(50% 50%, @innerColor, @outerColor);\n  background-image:      -o-radial-gradient(50% 50%, @innerColor, @outerColor);\n  background-image:         radial-gradient(50% 50%, @innerColor, @outerColor);\n}\n\n.gradient-direction (@startColor: #555, @endColor: #333, @degrees: 45) {\n  background: @endColor;\n  background-image: -webkit-gradient(linear, ~\"@{degrees}deg\", from(@startColor), to(@endColor));\n  background-image: -webkit-linear-gradient(~\"@{degrees}deg\", @startColor, @endColor);\n  background-image:    -moz-linear-gradient(~\"@{degrees}deg\", @startColor, @endColor);\n  background-image:      -o-linear-gradient(~\"@{degrees}deg\", @startColor, @endColor);\n  background-image:         linear-gradient(~\"@{degrees}deg\", @startColor, @endColor);\n}\n\n/* @group background-clip() */\n\n  .bg-clip (@type: border-box) when (@type = border-box), (@type = padding-box), (@type = content-box) { /* ( border-box | padding-box | content-box ) */\n    -webkit-background-clip: @type;\n            background-clip: @type;\n  }\n\n  .bg-clip (@type: border) when not (@type = border-box) and not (@type = padding-box) and not (@type = content-box) { /* ( border-box | padding-box | content-box ) */\n    -webkit-background-clip: ~\"@{type}-box\";\n       -moz-background-clip: @type;\n            background-clip: ~\"@{type}-box\";\n  }\n\n/* @end */\n\n.bg-size (@value) {\n  -webkit-background-size: @value;\n          background-size: @value;\n}\n\n\n/* Box Group\n========================== */\n\n/* @option: box-display() */\n\n  .box-display () {\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-box;\n    display: box;\n  }\n\n/* @end */\n\n.box-align (@value) { /* ( start | end | center | baseline | stretch ) */\n  -webkit-box-align: @value;\n     -moz-box-align: @value;\n      -ms-box-align: @value;\n          box-align: @value;\n\n  .box-display;\n}\n\n.box-direction (@value) { /* ( normal | reverse | inherit ) */\n  -webkit-box-align: @value;\n     -moz-box-align: @value;\n      -ms-box-align: @value;\n          box-align: @value;\n\n  .box-display;\n}\n\n.box-orient (@value) { /* ( horizontal | vertical | inline-axis | block-axis | inherit ) */\n  -webkit-box-align: @value;\n     -moz-box-align: @value;\n      -ms-box-align: @value;\n          box-align: @value;\n\n  .box-display;\n}\n\n.box-pack (@value) { /* ( start | end | center | justify ) */\n  -webkit-box-align: @value;\n     -moz-box-align: @value;\n      -ms-box-align: @value;\n          box-align: @value;\n\n  .box-display;\n}\n\n.box-sizing (@type: border-box) { /* ( content-box | border-box | inherit ) */\n  -webkit-box-sizing: @type;\n     -moz-box-sizing: @type;\n          box-sizing: @type;\n}\n\n/* @group box-shadow() */\n\n  .box-shadow-init (@all) {\n    -webkit-box-shadow: @all;\n            box-shadow: @all;\n  }\n\n  .box-shadow (@values: \"1px 1px 2px #000, 0 0 4px #fff, inset 1px 3px 2px #000\") { /* for multi values */\n    -webkit-box-shadow: e(@values);\n            box-shadow: e(@values);\n  }\n\n  .box-shadow (@option, @values) when (@option = in) {\n    .box-shadow-init(inset @values);\n  }\n\n  .box-shadow (@option, @values) when (@option = out) {\n    .box-shadow-init(@values);\n  }\n\n  .box-shadow (@parameters, @color, @alpha) when (isnumber(@alpha)) {\n    .box-shadow-init(@parameters fade(@color, @alpha));\n  }\n\n/* @end */\n\n\n/* Border Group\n========================== */\n\n.border-image (@source: none, @values: 30 30 repeat) { /* ( source | slice | width | outset | repeat ) */\n  -webkit-border-image: e(%(\"url('%d')\", ~\"@{source}\")) @values;\n     -moz-border-image: e(%(\"url('%d')\", ~\"@{source}\")) @values;\n       -o-border-image: e(%(\"url('%d')\", ~\"@{source}\")) @values;\n          border-image: e(%(\"url('%d')\", ~\"@{source}\")) @values;\n}\n\n/* @group rounded() */\n\n  .rounded (@radius: 2px) {\n    -webkit-border-radius: @radius * 1px;\n            border-radius: @radius * 1px;\n  }\n\n  .rounded (top, @value: 4) {\n    -webkit-border-top-left-radius: @value * 1px;\n            border-top-left-radius: @value * 1px;\n    \n    -webkit-border-top-right-radius: @value * 1px;\n            border-top-right-radius: @value * 1px;\n  }\n\n  .rounded (right, @value: 4) {\n    -webkit-border-top-right-radius: @value * 1px;\n            border-top-right-radius: @value * 1px;\n\n    -webkit-border-bottom-right-radius: @value * 1px;\n            border-bottom-right-radius: @value * 1px;\n  }\n\n  .rounded (bottom, @value: 4) {\n    -webkit-border-bottom-right-radius: @value * 1px;\n            border-bottom-right-radius: @value * 1px;\n\n    -webkit-border-bottom-left-radius: @value * 1px;\n            border-bottom-left-radius: @value * 1px;\n  }\n\n  .rounded (left, @value: 4) {\n    -webkit-border-top-left-radius: @value * 1px;\n            border-top-left-radius: @value * 1px;\n\n    -webkit-border-bottom-left-radius: @value * 1px;\n            border-bottom-left-radius: @value * 1px;\n  }\n\n/* @end */\n\n\n/* Transform Group\n========================== */\n\n.transform (@options) { /* clear transform function */\n  -webkit-transform: @options;\n     -moz-transform: @options;\n      -ms-transform: @options;\n       -o-transform: @options;\n          transform: @options;\n}\n\n/* @group matrix() */\n\n  .matrix (@rotate: 0.86, @scale: 0.5, @translate: -0.5, @skew: 0.86, @x: 0, @y: 0) {\n    -webkit-transform: matrix(@rotate, @scale, @translate, @skew, @x, @y);\n       -moz-transform: matrix(@rotate, @scale, @translate, @skew, @x, @y);\n        -ms-transform: matrix(@rotate, @scale, @translate, @skew, @x, @y);\n         -o-transform: matrix(@rotate, @scale, @translate, @skew, @x, @y);\n            transform: matrix(@rotate, @scale, @translate, @skew, @x, @y);\n  \n    filter: e(%(\"progid:DXImageTransform.Microsoft.Matrix(M11=%d, M12=%d, M21=%d, M22=%d, sizingMethod='auto expand')\", @rotate, @scale, @translate, @skew));\n  }\n\n  .matrix3d (@values: \"1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\") {\n    -webkit-transform: matrix3d(e(@values));\n       -moz-transform: matrix3d(e(@values));\n        -ms-transform: matrix3d(e(@values));\n         -o-transform: matrix3d(e(@values));\n            transform: matrix3d(e(@values));\n  }\n\n/* @end */\n\n/* @group rotate() */\n\n  .rotate (@degrees: 5) {\n    -webkit-transform: rotate(~\"@{degrees}deg\");\n       -moz-transform: rotate(~\"@{degrees}deg\");\n        -ms-transform: rotate(~\"@{degrees}deg\");\n         -o-transform: rotate(~\"@{degrees}deg\");\n            transform: rotate(~\"@{degrees}deg\");\n  }\n\n  .rotate3d (@x: 0, @y: 0, @z: 0, @degrees: 120) {\n    -webkit-transform: rotate3d(@x, @y, @z, ~\"@{degrees}deg\");\n       -moz-transform: rotate3d(@x, @y, @z, ~\"@{degrees}deg\");\n        -ms-transform: rotate3d(@x, @y, @z, ~\"@{degrees}deg\");\n         -o-transform: rotate3d(@x, @y, @z, ~\"@{degrees}deg\");\n            transform: rotate3d(@x, @y, @z, ~\"@{degrees}deg\");\n  }\n\n  .rotate (@axis, @degrees: 120) when (@axis = x) {\n    -webkit-transform: e(%('rotateX(%d)', ~\"@{degrees}deg\"));\n       -moz-transform: e(%('rotateX(%d)', ~\"@{degrees}deg\"));\n        -ms-transform: e(%('rotateX(%d)', ~\"@{degrees}deg\"));\n         -o-transform: e(%('rotateX(%d)', ~\"@{degrees}deg\"));\n            transform: e(%('rotateX(%d)', ~\"@{degrees}deg\"));\n  }\n\n  .rotate (@axis, @degrees: 10) when (@axis = y) {\n    -webkit-transform: e(%('rotateY(%d)', ~\"@{degrees}deg\"));\n       -moz-transform: e(%('rotateY(%d)', ~\"@{degrees}deg\"));\n        -ms-transform: e(%('rotateY(%d)', ~\"@{degrees}deg\"));\n         -o-transform: e(%('rotateY(%d)', ~\"@{degrees}deg\"));\n            transform: e(%('rotateY(%d)', ~\"@{degrees}deg\"));\n  }\n\n  .rotate (@axis, @degrees: 10) when (@axis = z) {\n    -webkit-transform: e(%('rotateZ(%d)', ~\"@{degrees}deg\"));\n       -moz-transform: e(%('rotateZ(%d)', ~\"@{degrees}deg\"));\n        -ms-transform: e(%('rotateZ(%d)', ~\"@{degrees}deg\"));\n         -o-transform: e(%('rotateZ(%d)', ~\"@{degrees}deg\"));\n            transform: e(%('rotateZ(%d)', ~\"@{degrees}deg\"));\n  }\n\n/* @end */\n\n/* @group scale() */\n\n.scale (@ratio: 1) {\n  -webkit-transform: scale(@ratio);\n     -moz-transform: scale(@ratio);\n      -ms-transform: scale(@ratio);\n       -o-transform: scale(@ratio);\n          transform: scale(@ratio);\n}\n\n.scale3d (@x: 1, @y: 1, @z: 1) {\n  -webkit-transform: scale3d(@x, @y, @z);\n     -moz-transform: scale3d(@x, @y, @z);\n      -ms-transform: scale3d(@x, @y, @z);\n          transform: scale3d(@x, @y, @z);\n}\n\n.scale (@axis, @value: 1) when (@axis = x) {\n  -webkit-transform: e(%('scaleX(%d)', @value));\n     -moz-transform: e(%('scaleX(%d)', @value));\n      -ms-transform: e(%('scaleX(%d)', @value));\n       -o-transform: e(%('scaleX(%d)', @value));\n          transform: e(%('scaleX(%d)', @value));\n}\n\n.scale (@axis, @value: 1) when (@axis = y) {\n  -webkit-transform: e(%('scaleY(%d)', @value));\n     -moz-transform: e(%('scaleY(%d)', @value));\n      -ms-transform: e(%('scaleY(%d)', @value));\n       -o-transform: e(%('scaleY(%d)', @value));\n          transform: e(%('scaleY(%d)', @value));\n}\n\n.scale (@axis, @value: 1) when (@axis = z) {\n  -webkit-transform: e(%('scaleZ(%d)', @value));\n     -moz-transform: e(%('scaleZ(%d)', @value));\n      -ms-transform: e(%('scaleZ(%d)', @value));\n       -o-transform: e(%('scaleZ(%d)', @value));\n          transform: e(%('scaleZ(%d)', @value));\n}\n\n/* @end */\n\n/* @group translate() */\n\n  .translate (@x: 0, @y: 0) when not (@x = x) and not (@x = y) and not (@x = z) {\n    -webkit-transform: translate(@x * 1px, @y * 1px);\n       -moz-transform: translate(@x * 1px, @y * 1px);\n        -ms-transform: translate(@x * 1px, @y * 1px);\n         -o-transform: translate(@x * 1px, @y * 1px);\n            transform: translate(@x * 1px, @y * 1px);\n  }\n\n  .translate3d (@x: 0, @y: 0, @z: 0) {\n    -webkit-transform: translate3d(@x * 1px, @y * 1px, @z * 1px);\n       -moz-transform: translate3d(@x * 1px, @y * 1px, @z * 1px);\n        -ms-transform: translate3d(@x * 1px, @y * 1px, @z * 1px);\n         -o-transform: translate3d(@x * 1px, @y * 1px, @z * 1px);\n            transform: translate3d(@x * 1px, @y * 1px, @z * 1px);\n  }\n\n  .translate (@axis, @x: 0) when (@axis = x) {\n    -webkit-transform: e(%('translateX(%d)', @x * 1px));\n       -moz-transform: e(%('translateX(%d)', @x * 1px));\n        -ms-transform: e(%('translateX(%d)', @x * 1px));\n         -o-transform: e(%('translateX(%d)', @x * 1px));\n            transform: e(%('translateX(%d)', @x * 1px));\n  }\n\n  .translate (@axis, @y: 0) when (@axis = y) {\n    -webkit-transform: e(%('translateY(%d)', @y * 1px));\n       -moz-transform: e(%('translateY(%d)', @y * 1px));\n        -ms-transform: e(%('translateY(%d)', @y * 1px));\n         -o-transform: e(%('translateY(%d)', @y * 1px));\n            transform: e(%('translateY(%d)', @y * 1px));\n  }\n\n  .translate (@axis, @z: 0) when (@axis = z) {\n    -webkit-transform: e(%('translateZ(%d)', @z * 1px));\n       -moz-transform: e(%('translateZ(%d)', @z * 1px));\n        -ms-transform: e(%('translateZ(%d)', @z * 1px));\n         -o-transform: e(%('translateZ(%d)', @z * 1px));\n            transform: e(%('translateZ(%d)', @z * 1px));\n  }\n\n/* @end */\n\n/* @group skew() */\n\n  .skew (@degrees-x: 20, @degrees-y: 20) when not (@degrees-x = x) and not (@degrees-x = y) {\n  -webkit-transform: skew(~\"@{degrees-x}deg\", ~\"@{degrees-y}deg\");\n     -moz-transform: skew(~\"@{degrees-x}deg\", ~\"@{degrees-y}deg\");\n      -ms-transform: skew(~\"@{degrees-x}deg\", ~\"@{degrees-y}deg\");\n       -o-transform: skew(~\"@{degrees-x}deg\", ~\"@{degrees-y}deg\");\n          transform: skew(~\"@{degrees-x}deg\", ~\"@{degrees-y}deg\");\n  }\n\n  .skew (@axis, @degrees-x: 20) when (@axis = x) {\n  -webkit-transform: e(%('skewX(%d)', ~\"@{degrees-x}deg\"));\n     -moz-transform: e(%('skewX(%d)', ~\"@{degrees-x}deg\"));\n      -ms-transform: e(%('skewX(%d)', ~\"@{degrees-x}deg\"));\n       -o-transform: e(%('skewX(%d)', ~\"@{degrees-x}deg\"));\n          transform: e(%('skewX(%d)', ~\"@{degrees-x}deg\"));\n  }\n\n  .skew (@axis, @degrees-y: 20) when (@axis = y) {\n  -webkit-transform: e(%('skewY(%d)', ~\"@{degrees-y}deg\"));\n     -moz-transform: e(%('skewY(%d)', ~\"@{degrees-y}deg\"));\n      -ms-transform: e(%('skewY(%d)', ~\"@{degrees-y}deg\"));\n       -o-transform: e(%('skewY(%d)', ~\"@{degrees-y}deg\"));\n          transform: e(%('skewy(%d)', ~\"@{degrees-y}deg\"));\n  }\n\n/* @end */\n\n.perspective (@value: none, @unit: px) {\n  -webkit-perspective: @value;\n     -moz-perspective: ~\"@{value}@{unit}\";\n      -ms-perspective: @value; /* IE 10+ */\n          perspective: @value;\n}\n\n.perspective-origin (@values: 50% 50%) {\n  -webkit-perspective-origin: @values;\n     -moz-perspective-origin: @values;\n      -ms-perspective-origin: @values; /* IE 10+ */\n          perspective-origin: @values;\n}\n\n.transform-origin (@x: 50%, @y: 50%, @z: 0) {\n  -webkit-transform-origin: @arguments;\n     -moz-transform-origin: @arguments;\n      -ms-transform-origin: @arguments; /* IE 10+ */\n       -o-transform-origin: @arguments;\n          transform-origin: @arguments;\n}\n\n.transform-style (@value: flat) { /* ( flat | preserve-3d ) */\n  -webkit-transform-style: @value;   \n     -moz-transform-style: @value; /* FF 10+ */\n      -ms-transform-style: @value; /* IE 10+ */\n          transform-style: @value; \n}\n\n\n/* Transition\n========================== */\n\n.transition (@property: property, @duration: 0.2s, @timing: ease-out, @delay: 0s) {\n  -webkit-transition: @arguments;\n     -moz-transition: @property @duration @timing ~\"@{delay}s\";\n       -o-transition: @arguments;\n          transition: @arguments;\n}\n\n\n/* Animation Group\n========================== */\n\n.animate (@name: none, @duration: 2s, @timing: ease, @delay: 0, @iteration-count: 1, @direction: normal) {\n  -webkit-animation: @name @duration @timing @delay @iteration-count @direction; /* Saf5, Chrome */\n     -moz-animation: @name @duration @timing ~\"@{delay}s\" @iteration-count @direction; /* FF5+ */\n       -o-animation: @name @duration @timing @delay @iteration-count @direction; /* Opera 12+ */\n}\n\n.animation-state (@state: running) { /* ( paused | running ) */\n  -webkit-animation-play-state: @state;\n     -moz-animation-play-state: @state;\n          animation-play-state: @state;\n}\n\n\n/* Column\n========================== */\n\n.columns (@columnCount: auto, @columnGap: normal) {\n  -webkit-columns: @columnCount;\n     -moz-columns: @columnCount;\n      -ms-columns: @columnCount;\n          columns: @columnCount;\n\n  -webkit-column-gap: @columnGap;\n     -moz-column-gap: @columnGap;\n      -ms-column-gap: @columnGap;\n          column-gap: @columnGap;\n}\n\n\n/* Misc Group\n========================== */\n\n.opacity (@opacity: 0.5) when (isnumber(@opacity)) and not (@opacity < 0) and not (@opacity > 1) {\n  zoom: 1;\n  opacity: @opacity;\n  filter: e(%(\"alpha(opacity=%d)\", @opacity*100));\n}\n\n.font (@style: normal, @variant: normal, @weight: normal, @size: medium, @line-height: normal, @family: \"'Lucida Grande', Helvetica, Arial, Verdana, sans-serif\") {\n  font-style: @style;\n  font-variant: @variant;\n  font-weight: @weight;\n  font-size: @size;\n  line-height: @line-height;\n  font-family: e(@family);\n}\n\n.font-face (@name: Helvetca Neue, @url: \"/assets/font/helvetica/helvetca-neue\") {\n  @font-face {\n    font-family: %('%d', @name);\n    src: e(%(\"url('%d.eot?#') format('eot')\", ~\"@{url}\")),\n         e(%(\"url('%d.woff') format('woff')\", ~\"@{url}\")),\n         e(%(\"url('%d.ttf') format('truetype')\", ~\"@{url}\"));\n  }\n}\n\n.size (@width: 400, @height: 200) {\n  width: @width * 1px;\n  height: @height * 1px;\n}\n\n.square (@value: 100) {\n  .size(@value, @value);\n}\n\n.resizable (@direction: both) { /* ( horizontal | vertical | both ) */\n  resize: @direction;\n  overflow: auto;\n}\n\n.hide-text () {\n  text-indent: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.center-block () {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.clearfix () {\n  *zoom: 1;\n  &:before, &:after {\n    content: \"\";\n    display: table;\n  }\n  &:after {\n    clear: both;\n  }\n}\n\n// added by Adi\n\n// Hide only visually, but have it available for screen readers\n.visuallyhidden() {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n}\n\n// text shadow\n.text-shadow (@string: 0 1px 3px rgba(0, 0, 0, 0.5);) {\n\ttext-shadow: @string;\n}\n// drop shadow, better than box-shadow\n.drop-shadow(@string: 0 1px 3px rgba(0, 0, 0, 0.5)) {\n\t-ms-filter: drop-shadow(@string);\n\t-webkit-filter: drop-shadow(@string);\n\t-moz-filter: drop-shadow(@string);\n\t-o-filter: drop-shadow(@string);\n\tfilter: drop-shadow(@string);\n}\n//make images grayscale\n.grayscale(@level: 0.5) when (isnumber(@level)) and not (@level < 0) and not (@level > 1){\n-ms-filter: grayscale(@level);\n-webkit-filter: grayscale(@level);\n-moz-filter: grayscale(@level);\n-o-filter: grayscale(@level);\nfilter: grayscale(@level);\n}\n\n// hide and truncate long text\n.text-truncate() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n// wrap long text and long words into new lines\n.wrap() {\n  text-wrap: wrap;\n  white-space: -moz-pre-wrap;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n}\n\n// Remove text-shadow in selection highlight\n.selection-color(@color: #b3d4fc) {\n\t::-moz-selection {\n\t\t\tbackground: @color;\n\t\t\ttext-shadow: none;\n\t}\n\t::selection {\n\t\t\tbackground: @color;\n\t\t\ttext-shadow: none;\n\t}\n}\n\n\n// px to em conversion\n.px2em( @target: @basefont, @context: @font-size-base ) {\n\t\tfont-size: (@target / @context) + 0em;\n}"],"sourceRoot":"/source/"}